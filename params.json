{
  "name": "Minesweeper",
  "tagline": "This version of the minesweeper allows you to generate a custom board, where you get to decide the number of bombs, height and width of the board.",
  "body": "#Minesweeper\r\nThis project encompasses all the usual rules of the traditional minesweeper game. \r\nUsers can customize their own board with the height, width and number of mines, entered as command line arguments.\r\nUsers uncover a particular spot based on the coordinates specified.\r\n\r\nThe key functions-\r\n* Generated the board with user specified height,width and number of bombs to play the game.\r\n* Randomized the location of bombs using mt19937 (Mersenne Twister) algorithm.\r\n* Built the logic around uncovering the bombs.\r\n* Allow flagging of suspected bombs and ensure that these don't get clicked/uncovered.\r\n\r\nFrom a secure coding perspective care was taken to apply the rules and recommendations for Arrays and Expressions as per the SEI CERT Coding Standards. \r\nSome of the applications are-\r\n* Care was taken to allocate and deallocate the memory for representing the board and not reading into uninitialized memory.\r\n* Ensuring proper size arguments for variable length arrays.\r\n* Explicit testing to determine success, true, false and equality using if else loops.\r\n\r\nAs a RED team we evaluated the opponents code base for declarations, initialization and other Miscellaneous standards.\r\nSome of the evaluation points were-\r\n* Used a better randomization function as compared to the usual rand().\r\n* Ensured the only valid inputs were accepted form the user.\r\n* All unexpected conditions were caught and handled appropriately.\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}